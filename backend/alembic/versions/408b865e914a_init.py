"""init

Revision ID: 408b865e914a
Revises: 
Create Date: 2023-01-08 21:38:50.694288

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '408b865e914a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('test',
                    sa.Column('title', sa.String(), nullable=True, comment='название'),
                    sa.Column('description', sa.String(), nullable=True, comment='описание'),
                    sa.Column('slug', sa.String(), nullable=True, comment='строка для url'),
                    sa.Column('school_class', sa.Integer(), nullable=True),
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('slug')
                    )
    op.execute("CREATE TYPE task_type AS ENUM ('SINGLE', 'FULL', 'MANY');")
    op.create_table('task',
                    sa.Column('task_type', sa.Enum('SINGLE', 'FULL', 'MANY', name='tasktype'), nullable=True),
                    sa.Column('task_text', sa.Text(), nullable=True),
                    sa.Column('right_answer', sa.Integer(), nullable=False),
                    sa.Column('image_link', sa.String(), nullable=True, comment='ссылка на картинку для задачи'),
                    sa.Column('test_id', sa.Integer(), nullable=False),
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.ForeignKeyConstraint(['test_id'], ['test.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_task_right_answer'), 'task', ['right_answer'], unique=False)
    op.create_index(op.f('ix_task_test_id'), 'task', ['test_id'], unique=False)
    op.create_table('task_answer',
                    sa.Column('task_id', sa.Integer(), nullable=True),
                    sa.Column('title', sa.String(), nullable=True, comment='текст варианта ответа'),
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    sa.ForeignKeyConstraint(['right_answer'], ['task_answer.id'], ),
    op.create_index(op.f('ix_task_answer_task_id'), 'task_answer', ['task_id'], unique=False)

    op.create_table('textbook',
                    sa.Column('school_class', sa.Integer(), nullable=True),
                    sa.Column('title', sa.String(), nullable=True),
                    sa.Column('slug', sa.String(), nullable=True),
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('slug')
                    )
    op.create_table('user',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('name', sa.String(), nullable=True, comment='name of user'),
                    sa.Column('middle_name', sa.String(), nullable=True, comment='middle name of user'),
                    sa.Column('last_name', sa.String(), nullable=True, comment='last name of user'),
                    sa.Column('email', sa.String(), nullable=False, comment='email'),
                    sa.Column('username', sa.String(), nullable=True, comment='username'),
                    sa.Column('hashed_password', sa.String(), nullable=False, comment='passwd'),
                    sa.Column('is_active', sa.Boolean(), nullable=True, comment='locked or unlocked'),
                    sa.Column('is_superuser', sa.Boolean(), nullable=True),
                    sa.Column('is_subscribed', sa.Boolean(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.Column('birth_date', sa.DateTime(), nullable=True),
                    sa.Column('subscription_ends', sa.DateTime(), nullable=True),
                    sa.Column('last_login_at', sa.DateTime(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('username')
                    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_last_name'), 'user', ['last_name'], unique=False)
    op.create_index(op.f('ix_user_name'), 'user', ['name'], unique=False)
    op.create_table('video',
                    sa.Column('title', sa.String(), nullable=True, comment='название видео'),
                    sa.Column('link', sa.String(), nullable=True, comment='ссылка на видео в источнике'),
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('topic',
                    sa.Column('textbook_id', sa.Integer(), nullable=False),
                    sa.Column('title', sa.String(), nullable=True, comment='название темы'),
                    sa.Column('description', sa.Text(), nullable=True, comment='описание занятия'),
                    sa.Column('slug', sa.String(), nullable=True, comment='строка для url'),
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.ForeignKeyConstraint(['textbook_id'], ['textbook.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('slug')
                    )
    op.create_index(op.f('ix_topic_textbook_id'), 'topic', ['textbook_id'], unique=False)
    op.create_table('test_x_topic',
                    sa.Column('test_id', sa.Integer(), nullable=False),
                    sa.Column('topic_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['test_id'], ['test.id'], ),
                    sa.ForeignKeyConstraint(['topic_id'], ['topic.id'], ),
                    sa.PrimaryKeyConstraint('test_id', 'topic_id')
                    )
    op.create_table('video_x_topic',
                    sa.Column('video_id', sa.Integer(), nullable=False),
                    sa.Column('topic_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['topic_id'], ['topic.id'], ),
                    sa.ForeignKeyConstraint(['video_id'], ['video.id'], ),
                    sa.PrimaryKeyConstraint('video_id', 'topic_id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('video_x_topic')
    op.drop_table('test_x_topic')
    op.drop_index(op.f('ix_topic_textbook_id'), table_name='topic')
    op.drop_table('topic')
    op.drop_table('video')
    op.drop_index(op.f('ix_user_name'), table_name='user')
    op.drop_index(op.f('ix_user_last_name'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('textbook')
    op.drop_table('test')
    op.drop_index(op.f('ix_task_answer_task_id'), table_name='task_answer')
    op.drop_table('task_answer')
    op.drop_index(op.f('ix_task_test_id'), table_name='task')
    op.drop_index(op.f('ix_task_right_answer'), table_name='task')
    op.drop_table('task')
    # ### end Alembic commands ###
